// Name: Shridhar Vashishtha
// CSCI fall 2022, project 3
public class Gibberisher {
    private Trie<CharBag> bag;
    private int segmentLength;
    private int processedLetterSamples;

    /**
     * constructor
     * @param segmentLength is the segment length used for the gibberisher
     */
    public Gibberisher(int segmentLength){
        this.segmentLength = segmentLength;
        bag = new Trie();
        processedLetterSamples = 0;
    }

    /**
     * this is to train the model.
     * it generates lettersamples and then add these samples in the model
     * @param value is the array of strings used to generate the letter samples for the model
     */
    public void train(String[] value){
        for(int i = 0; i < value.length; i++){
            LetterSample[] samples = LetterSample.toSamples(value[i], segmentLength);
            for(LetterSample s: samples){
                if (bag.get(s.getSegment()) == null){
                    bag.put(s.getSegment(), new CharBag());
                }
                bag.get(s.getSegment()).add(s.getNextLetter());
                processedLetterSamples++;
            }
        }
        return;
    }

    /**
     * gets the number of distinct lettersamples used so for to train the model
     * @return is the number of lettersamples used so far to train the model
     */
    public int getSampleCount(){
        return processedLetterSamples;
    }

    /**
     * generates "gibberish" word using the model
     * @return is the word generated by the function
     */
    public String generate(){
        String word = "";

        while(!word.endsWith("" + LetterSample.STOP)) {
            String wordSubstring = word;
            if (word.length() > segmentLength) {
                wordSubstring = word.substring(word.length() - segmentLength, word.length());
            }
            word += bag.get(wordSubstring).getRandomChar();
        }
        return word.substring(0, word.length() - 1);
    }
}

